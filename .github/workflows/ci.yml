name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10
  PYTHON_VERSION: "3.12"

jobs:
  cargo-test-unix:
    strategy:
      matrix:
        include:
          # We use the large GitHub actions runners
          # For Ubuntu and Windows, this requires Organization-level configuration
          # See: https://docs.github.com/en/actions/using-github-hosted-runners/about-larger-runners/about-larger-runners#about-ubuntu-and-windows-larger-runners
          - os: "ubuntu"
            runner: "ubuntu-latest-large"
      fail-fast: false
    runs-on:
      labels: ${{ matrix.runner }}
    name: "cargo test | ${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v4

      - name: "Setup tmate session"
        uses: mxschmitt/action-tmate@v3

      - name: "Install Rust toolchain"
        run: rustup show

      - uses: rui314/setup-mold@v1

      - uses: Swatinem/rust-cache@v2

      - name: "Install required Python versions"
        run: |
          cargo run -p uv-dev -- fetch-python

      - name: "Install cargo nextest"
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: "Cargo test"
        run: |
          export UV_BOOTSTRAP_DIR="$(pwd)/bin"
          cargo nextest run \
            --workspace \
            --status-level skip --failure-output immediate-final --no-fail-fast -j 12 --final-status-level slow

      - name: "Smoke test"
        run: |
          uv="./target/debug/uv"
          $uv venv
          $uv pip install ruff
